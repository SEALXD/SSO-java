#不允许默认的弹窗表单
security.basic.user.name=false
security.basic.user.password=false
#允许页面加载frame
security.headers.frame=true
#不允许页面缓存
spring.thymeleaf.cache=false
#要拦截的路径，不配置则默认所有路径均拦截
#security.basic.path=/**
#设置登录和获取code默认回调地址，不配置则默认为/login
#security.oauth2.sso.login-path=/portal
#认证服务器分配ID
security.oauth2.client.clientId=client
#秘钥，可以不设置
#security.oauth2.client.clientSecret=111111
#认证服务器授权方式
security.oauth2.client.authorized-grant-types=authorization_code,refresh_token
#认证服务器获取token路径
security.oauth2.client.accessTokenUri=http://localhost:7780/oauth/token
#认证服务器获取CODE路径
security.oauth2.client.userAuthorizationUri=http://localhost:7780/oauth/authorize
#可以自定义回调路径，不设置则默认与登录路径security.oauth2.sso.login-path一致
#security.oauth2.client.preEstablishedRedirectUri=http://localhost/callback
#是否启用默认路径，如果要使用自定义路径，这里必须配置为false
security.oauth2.client.useCurrentUri=true
#获取到token后，token装配在http协议的header还是query/form中
security.oauth2.client.clientAuthenticationScheme=header
#获取到token后，获取用户认证信息的路径
security.oauth2.resource.userInfoUri=http://localhost:7780/user
#设置SESSION名称，主要避免多个资源端在同一服务器造成SESSION命名重叠
server.servlet.session.cookie.name=UISESSION


